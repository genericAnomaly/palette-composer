/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */
 //Note: I broke the connection between this file and the GUI editor 'cos I created it with really bad event handler registration that it wouldn't let me revert so I had to change the code by hand.

public void onPanelEvent(GPanel source, GEvent event) { //_CODE_:pBase:885325:
  println("panelBase - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:pBase:885325:

public void onButtonEvent(GButton source, GEvent event) { //_CODE_:bLoadSprite:672881:
  println("bLoadSprite - GButton >> GEvent." + event + " @ " + millis());
  if (source == bLoadSprite) selectInput("Select sprite to load", "onLoadSpriteSelected");
  if (source == bLoadJSON) selectInput("Select palette file to load", "onLoadJSONSelected");
} //_CODE_:bLoadSprite:672881:




// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Palette Composer");
  pBase = new GPanel(this, 0, 0, 160, 160, "Sprite Base");
  pBase.setCollapsible(false);
  pBase.setDraggable(false);
  pBase.setText("Sprite Base");
  pBase.setTextBold();
  pBase.setOpaque(true);
  pBase.addEventHandler(this, "onPanelEvent");
  sBase = new GSketchPad(this, 0, 20, 160, 140);
  pBase.addControl(sBase);
  pPreview = new GPanel(this, 160, 0, 160, 160, "Sprite Preview");
  pPreview.setCollapsible(false);
  pPreview.setDraggable(false);
  pPreview.setText("Sprite Preview");
  pPreview.setTextBold();
  pPreview.setOpaque(true);
  pPreview.addEventHandler(this, "onPanelEvent");
  sPreview = new GSketchPad(this, 0, 20, 160, 140);
  pPreview.addControl(sPreview);
  pChannels = new GPanel(this, 0, 160, 640, 160, "Channel Manager");
  pChannels.setCollapsible(false);
  pChannels.setDraggable(false);
  pChannels.setText("Channel Manager");
  pChannels.setOpaque(true);
  pChannels.addEventHandler(this, "onPanelEvent");
  pEditor = new GPanel(this, 320, 0, 320, 160, "Palette Editor");
  pEditor.setCollapsible(false);
  pEditor.setDraggable(false);
  pEditor.setText("Palette Editor");
  pEditor.setOpaque(true);
  pEditor.addEventHandler(this, "onPanelEvent");
  bLoadSprite = new GButton(this, 0, 320, 160, 32);
  bLoadSprite.setText("Load Sprite Base");
  bLoadSprite.addEventHandler(this, "onButtonEvent");
  bLoadJSON = new GButton(this, 160, 320, 160, 32);
  bLoadJSON.setText("Load Palette File");
  bLoadJSON.addEventHandler(this, "onButtonEvent");
}

// Variable declarations 
// autogenerated do not edit
GPanel pBase; 
GSketchPad sBase; 
GPanel pPreview; 
GSketchPad sPreview; 
GPanel pChannels; 
GPanel pEditor; 
GButton bLoadSprite; 
GButton bLoadJSON; 

